package crypto;

import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

public class Decryption {

    public static void main(String[] args) {
        String a = "bl3NXtY5foTPaNZR80M/zhBd6kNgYHJPDBH9+87m4UwNYvm/1t6MwdfhqksdZ0PwtkRO+t8UzKkd0/8v45nyLGpAPCVohl7SHo4aENPjWlqMA2eI5RrjoPF6g+yX1O2ptEaunAZlhA559yzzMZ4aY354ra4+fYFb+Np9fTYWYZ8=";
        String data = decryptData(a,"BOKBHcm5dM54DpKgeM7/Ng==","vNDUFjLTwU7WQP2TvnUB9Q==");
        System.out.println(data);
    }

    public static String decryptData(String encrypted_data, String iv, String session_key) {
        if (session_key.equals("")) {
            return "Please enter key!";
        }
        if (iv.equals("")) {
            return "Please enter iv!";
        }
        if (encrypted_data.equals("")) {
            return "Please enter encrypt data!";
        }

        try {
            Base64.getDecoder().decode(session_key);
        } catch (IllegalArgumentException e) {
            return "key no correct base64";
        }
        try {
            Base64.getDecoder().decode(iv);
        } catch (IllegalArgumentException e) {
            return "iv no correct base64";
        }

        try {
            byte[] aes_iv = Base64.getDecoder().decode(iv);
            byte[] aes_cipher = Base64.getDecoder().decode(encrypted_data);
            byte[] aes_key = Base64.getDecoder().decode(session_key);

            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
            SecretKeySpec key_spec = new SecretKeySpec(aes_key, "AES");
            IvParameterSpec iv_spec = new IvParameterSpec(aes_iv);
            cipher.init(Cipher.DECRYPT_MODE, key_spec, iv_spec);

            byte[] result = cipher.doFinal(aes_cipher);

            return new String(result);
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return "DeCrypt Err:" + e.toString();
        }
    }
}
