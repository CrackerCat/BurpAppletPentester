package crypto;

import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

public class Encryption {
    public static void main(String[] args) {
        String a = "{\"phoneNumber\":\"1\",\"purePhoneNumber\":\"1\",\"countryCode\":\"86\",\"watermark\":{\"timestamp\":1675043347,\"appid\":\"wxf74b391fe19932d6\"}}";
        String data = encryptData(a,"BOKBHcm5dM54DpKgeM7/Ng==","vNDUFjLTwU7WQP2TvnUB9Q==");
        System.out.println(data);
    }


    public static String encryptData(String decrypted_data, String iv, String session_key) {
        if (session_key.equals("")) {
            return "Please enter key!";
        }
        if (iv.equals("")) {
            return "Please enter iv!";
        }
        if (decrypted_data.equals("")) {
            return "Please enter original data!";
        }

        try {
            Base64.getDecoder().decode(session_key);
        } catch (IllegalArgumentException e) {
            return "key no correct base64";
        }
        try {
            Base64.getDecoder().decode(iv);
        } catch (IllegalArgumentException e) {
            return "iv no correct base64";
        }

        try {
            byte[] aes_iv = Base64.getDecoder().decode(iv);
            byte[] aes_key = Base64.getDecoder().decode(session_key);

            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
            SecretKeySpec key_spec = new SecretKeySpec(aes_key, "AES");
            IvParameterSpec iv_spec = new IvParameterSpec(aes_iv);
            cipher.init(Cipher.ENCRYPT_MODE, key_spec, iv_spec);

            byte[] aes_cipher = decrypted_data.getBytes();
            byte[] result = cipher.doFinal(aes_cipher);

            return Base64.getEncoder().encodeToString(result);
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return e.toString();
        }
    }
}
